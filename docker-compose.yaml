version: '3.7'

services:

    postgres:
        container_name: postgres_container
        image: postgres:15-alpine

        command:
            - "postgres"
            - "-c"
            - "max_connections=50"
            - "-c"
            - "shared_buffers=1GB"
            - "-c"
            - "effective_cache_size=4GB"
            - "-c"
            - "work_mem=16MB"
            - "-c"
            - "maintenance_work_mem=512MB"
            - "-c"
            - "random_page_cost=1.1"
            - "-c"
            - "temp_file_limit=10GB"
            - "-c"
            - "log_min_duration_statement=200ms"
            - "-c"
            - "idle_in_transaction_session_timeout=10s"
            - "-c"
            - "lock_timeout=1s"
            - "-c"
            - "statement_timeout=60s"
            - "-c"
            - "shared_preload_libraries=pg_stat_statements"
            - "-c"
            - "pg_stat_statements.max=10000"
            - "-c"
            - "pg_stat_statements.track=all"

        environment:
            POSTGRES_DB: ${POSTGRES_DB:-postgres}
            POSTGRES_USER: ${POSTGRES_USER:-postgres}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
            PGDATA: /var/lib/postgresql/data/pgdata

        volumes:
            - ./initdb:/docker-entrypoint-initdb.d
            - .:/var/lib/postgresql/data

        ports:
            - ${POSTGRES_PORT:-5432}:5432

        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s

        restart: unless-stopped

        deploy:
            resources:
                limits:
                    cpus: '1'
                    memory: 4G

        networks:
            - postgres

    pgadmin:
        container_name: pgadmin_container
        image: dpage/pgadmin4:6.19

        depends_on:
            - postgres

        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@example.com}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
            PGADMIN_CONFIG_SERVER_MODE: 'False'

        volumes:
            - ./pgadmin:/var/lib/pgadmin

        ports:
            - ${PGADMIN_PORT:-5050}:80

        networks:
            - postgres

        restart: unless-stopped

networks:
    postgres:
        driver: bridge

# ============ !!!!! ============
# Create 'pgadmin' dir
# mkdir pgadmin && sudo chown -R 5050:80 pgadmin
# -------------------------------
# Start:
# docker-compose --compatibility up -d
# -------------------------------
# Access to Postgres:
# localhost:5432
# Username: postgres (as a default)
# Password: changeme (as a default)
# -------------------------------
# Access to PgAdmin:
# URL: http://localhost:5050
# EMAIL: pgadmin@example.com
# Password: admin
# -------------------------------
# Connect to Postgres from PgAdmin
# Host name/address: postgres_container
# Port: 5432
# Maintenance DB: postgres
# Password: changeme
# -------------------------------
# Stop lifted containers:
# docker-compose --compatibility stop
# -------------------------------
# Start stopped containers
# docker-compose --compatibility start
# -------------------------------
# Stop and delete containers and network:
# docker-compose --compatibility down
# -------------------------------
# Clear project
# sudo rm -r pgadmin pgdata
